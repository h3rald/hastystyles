<!doctype html>
<html lang="en">
<head>
  <title>HastyStyles Test Document</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="author" content="Fabio Cevasco">
  <meta name="generator" content="HastyScribe">
  
  
  
  <style>
@import url('hastystyles.css');
@import url('hastystyles.badges.css');
@import url('hastystyles.notes.css');
@import url('hastystyles.icons.css');
@import url('hastystyles.links.css');
</style>

  
</head>
<body class="headings">
  <div id="container">
    <a id="document-top"></a>
    <div id="header"><h1>HastyStyles Test Document</h1></div>
    <div id="toc"><ul>
 <li>
 <ul>
  <li><a href="#Syntax-Reference">Syntax Reference</a>
  <ul>
   <li><a href="#Document-Headers">Document Headers</a></li>
   <li><a href="#Transclusion">Transclusion</a></li>
   <li><a href="#Snippets">Snippets</a></li>
   <li><a href="#Fields">Fields</a></li>
   <li><a href="#Macros">Macros</a></li>
   <li><a href="#Inline-Formatting">Inline Formatting</a>
   <ul>
    <li><a href="#SmartyPants-Substitutions">SmartyPants Substitutions</a></li>
    <li><a href="#Icons">Icons</a></li>
    <li><a href="#Badges">Badges</a></li>
    <li><a href="#Anchors">Anchors</a></li>
    <li><a href="#Links">Links</a></li>
   </ul>
   </li>
   <li><a href="#Block-level-Formatting">Block-level Formatting</a>
   <ul>
    <li><a href="#Headings">Headings</a></li>
    <li><a href="#Tables">Tables</a></li>
    <li><a href="#Block-Quotes">Block Quotes</a></li>
    <li><a href="#Code-Blocks">Code Blocks</a></li>
    <li><a href="#Images">Images</a></li>
    <li><a href="#Lists">Lists</a>
    <ul>
     <li><a href="#Unordered-Lists">Unordered Lists</a></li>
     <li><a href="#Ordered-Lists">Ordered Lists</a></li>
     <li><a href="#Alphabetical-Lists">Alphabetical Lists</a></li>
     <li><a href="#Checklists">Checklists</a></li>
     <li><a href="#Unstyled-Lists">Unstyled Lists</a></li>
     <li><a href="#Nested-Lists">Nested Lists</a></li>
     <li><a href="#Definition-Lists">Definition Lists</a></li>
    </ul>
    </li>
    <li><a href="#Class-Blocks">Class Blocks</a>
    <ul>
     <li><a href="#Notes">Notes</a></li>
     <li><a href="#Tips">Tips</a></li>
     <li><a href="#Warnings">Warnings</a></li>
     <li><a href="#Sidebars">Sidebars</a></li>
     <li><a href="#Blank-Sidebars">Blank Sidebars</a></li>
     <li><a href="#Terminal-Sessions">Terminal Sessions</a></li>
    </ul>
    </li>
   </ul>
   </li>
  </ul>
  </li>
 </ul>
 </li>
</ul>
</div>
    <div id="main">




<a name="Syntax-Reference"></a>
<h2>Syntax Reference<a href="#document-top" title="Go to top"></a></h2>

<a name="Document-Headers"></a>
<h3>Document Headers<a href="#document-top" title="Go to top"></a></h3>

<p>HastyScribe  supports <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a>-style Document Headers, as implemented by the <a href="http://www.pell.portland.or.us/~orc/Code/discount/">Discount</a> library. Basically, you can specify the title of the document, author and date as the first three lines of the document, prepending each with a <span class="kwd">%</span>, like this</p>

<pre><code>% HastyScribe User Guide
% Fabio Cevasco
% -
</code></pre>

<div class="warning"><p>Important</p>

<ul>
<li>The order of the document headers is significant.</li>
<li>If you want to use the current date, enter <span class="kwd">% -</span> in the third line.</li>
</ul>
</div>

<a name="Transclusion"></a>
<h3>Transclusion<a href="#document-top" title="Go to top"></a></h3>

<p>When writing a long document, it is often useful to split it into many different files, to manage its contents better. HastyScribe  provides basic content transclusion support through the following syntax:</p>

<p><code>{@ my-file.md || 1 @}</code></p>

<p>When a file is processed, the line above will cause the contents of file <span class="file">my-file.md</span> to be included in the current file, as if they were part of it. Additionally, when using content transclusion syntax, it is mandatory to specify a number between 0 and 5 to indicate the <em>offset</em> of the headings present in the transcluded file. In this example, the heading numbers of all headings present in <span class="file">my-file.md</span> will be increased by 1, so any <span class="kwd">h2</span> will become <span class="kwd">h3</span>, any <span class="kwd">h3</span> will become <span class="kwd">h4</span>, and so on.</p>

<div class="warning"><p>Limitations</p>

<ul>
<li>It is recommended to place all transcluded files in the same folder as the transcluding file. If a transcluded file includes any image, its relative path will be interpreted as if it was relative to the transcluding file.</li>
<li>Heading offset will only work if headings are created using <span class="kwd">#</span>s. Underline syntax for <span class="kwd">h1</span> and <span class="kwd">h2</span> is not supported.</li>
</ul>
</div>

<a name="Snippets"></a>
<h3>Snippets<a href="#document-top" title="Go to top"></a></h3>

<p>If you want to reuse a few words or even entire blocks of texts, you can use HastyScribe &rsquo;s snippets.</p>

<p>A snippet definition is constituted by an identifier, followed by an arrow (<span class="kwd">-></span>), followed by some text &ndash; all wrapped in double curly brackets.</p>

<p>The following definition creates a snippet called <span class="kwd">test</span> which is transformed into the text &ldquo;This is a test snippet.&rdquo;.</p>

<p><code>{{test -> This is a test snippet.}}</code></p>

<p>Once a snippet is defined <em>anywhere</em> in the document, you can use its identifier wrapped in double curly brackets (<code>{{test}}}</code> in the previous example) anywhere in the document to reuse the specified text.</p>

<div class="sidebar"><p>Alternative Snippet Definition Syntax</p>

<p>When a document is compiled, both snippets <em>and snippet defininotions</em> are evaluated to their body text. To avoid snippet definitions being evaluated, you can use a double arrow (<span class="kwd">=></span>) in the definition:</p>

<p><code>{{test => This snippet definition will not be evaluated to its body text.}}</code></p></div>

<a name="Fields"></a>
<h3>Fields<a href="#document-top" title="Go to top"></a></h3>

<p>Besides user-defined snippets, HastyScribe  also support fields, which can be used to insert current time and date information in a variety of formats:</p>

<div class="responsive"><table>
<thead>
<tr>
<th>Source                                      </th>
<th> Output</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>{{$timestamp}}</code>             </td>
<td> 1693396493</td>
</tr>
<tr>
<td><code>{{$date}}</code>                  </td>
<td> 2023-08-30</td>
</tr>
<tr>
<td><code>{{$full-date}}</code>             </td>
<td> Wednesday, August 30, 2023</td>
</tr>
<tr>
<td><code>{{$long-date}}</code>             </td>
<td> August 30, 2023</td>
</tr>
<tr>
<td><code>{{$medium-date}}</code>           </td>
<td> Aug 30, 2023</td>
</tr>
<tr>
<td><code>{{$short-date}}</code>            </td>
<td> 8/30/23</td>
</tr>
<tr>
<td><code>{{$short-time}}</code>            </td>
<td> 13:54 PM</td>
</tr>
<tr>
<td><code>{{$short-time-24}}</code>         </td>
<td> 13:54</td>
</tr>
<tr>
<td><code>{{$time}}</code>                  </td>
<td> 13:54:53 PM</td>
</tr>
<tr>
<td><code>{{$time-24}}</code>               </td>
<td> 13:54:53</td>
</tr>
<tr>
<td><code>{{$day}}</code>                   </td>
<td> 30</td>
</tr>
<tr>
<td><code>{{$short-day}}</code>             </td>
<td> 30</td>
</tr>
<tr>
<td><code>{{$month}}</code>                 </td>
<td> 08</td>
</tr>
<tr>
<td><code>{{$short-month}}</code>           </td>
<td> 8</td>
</tr>
<tr>
<td><code>{{$year}}</code>                  </td>
<td> 2023</td>
</tr>
<tr>
<td><code>{{$short-year}}</code>            </td>
<td> 23</td>
</tr>
<tr>
<td><code>{{$weekday}}</code>               </td>
<td> Wednesday</td>
</tr>
<tr>
<td><code>{{$weekday-abbr}}</code>          </td>
<td> 30</td>
</tr>
<tr>
<td><code>{{$month-name}}</code>            </td>
<td> August</td>
</tr>
<tr>
<td><code>{{$month-name-abbr}}</code>       </td>
<td> Aug</td>
</tr>
<tr>
<td><code>{{$timezone-offset}}</code>       </td>
<td> +02:00</td>
</tr>
</tbody>
</table>
</div>

<p>Additionally, you can define your own custom fields via command-line parameters, using the <span class="arg">&ndash;field/</span> dynamic parameter, like this:</p>

<div class="terminal"><p>hastyscribe my-document.md &ndash;field/product:HastyScribe &ndash;field/version:1.2.0</p></div>

<p>In this case it will be possible to access the <span class="kwd">product</span> and <span class="kwd">product</span> fields within <span class="file">my-document.md</span> using <code>{{$product}}</code> and <code>{{$version}}</code>.</p>

<a name="Macros"></a>
<h3>Macros<a href="#document-top" title="Go to top"></a></h3>

<p>If snippets are not enough, and you want to reuse chunks of <em>similar</em> content, you can define substitution macros using the following syntax:</p>

<p><code>{#greet => Hello, $1! Are you $2?#}</code></p>

<p>This defines a macro called <span class="kwd">greet</span> that takes two parameters which will be substituted instead of <span class="kwd">$1</span> and <span class="kwd">$2</span>. To use the macro, use the following syntax:</p>

<p><code>{#greet||Fabio||ready#}</code></p>

<div class="note"><p>Note</p>

<ul>
<li>Like snippets, macros can be multiline.</li>
<li>Spaces and newline character are preseved ad the start and end of parameters.</li>
<li>You can use snippets and fields within macros (but you cannot nest macros inside other macros).</li>
<li>You can define macros using either <span class="kwd">-></span> or <span class="kwd">=></span>, although <span class="kwd">=></span> is preferred.</li>
</ul>
</div>

<a name="Inline-Formatting"></a>
<h3>Inline Formatting<a href="#document-top" title="Go to top"></a></h3>

<p>The following table lists all the most common ways to format inline text:</p>

<div class="responsive"><table>
<thead>
<tr>
<th>Source                                             </th>
<th> Output</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>**strong emphasis**</code> or <code>__strong emphasis__</code>      </td>
<td> <strong>strong emphasis</strong></td>
</tr>
<tr>
<td><code>*emphasis*</code> or <code>_emphasis_</code>                        </td>
<td> <em>emphasis</em></td>
</tr>
<tr>
<td><code>~~deleted text~~</code>                                  </td>
<td> <del>deleted text</del></td>
</tr>
<tr>
<td><code>&lt;ins&gt;inserted text&lt;ins&gt;</code>                           </td>
<td> <ins>inserted text</ins></td>
</tr>
<tr>
<td><code>`code`</code>                                         </td>
<td> <code>code</code></td>
</tr>
<tr>
<td><code>[HTML](abbr:Hypertext Markup Language)</code>            </td>
<td> <abbr title="Hypertext Markup Language">HTML</abbr></td>
</tr>
<tr>
<td><code>&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;</code>                      </td>
<td> <kbd>CTRL</kbd>+<kbd>C</kbd></td>
</tr>
<tr>
<td><code>&lt;mark&gt;marked&lt;/mark&gt;</code>                               </td>
<td> <mark>marked</mark>.</td>
</tr>
<tr>
<td><code>Sample output: &lt;samp&gt;This is a test.&lt;/samp&gt;</code>       </td>
<td> Sample output: <samp>This is a test.</samp></td>
</tr>
<tr>
<td><code>Set the variable &lt;var&gt;test&lt;/var&gt; to 1.</code>            </td>
<td> Set the variable <var>test</var> to 1.</td>
</tr>
<tr>
<td><code>&lt;q&gt;This is a short quotation&lt;/q&gt;</code>                  </td>
<td> <q>This is a short quotation</q></td>
</tr>
<tr>
<td><code>&lt;cite&gt;Hamlet&lt;/cite&gt;, by William Shakespeare.</code>      </td>
<td> <cite>Hamlet</cite>, by William Shakespeare.</td>
</tr>
<tr>
<td><code>A [.md](class:ext) file</code>                           </td>
<td> A <span class="ext">.md</span> file</td>
</tr>
<tr>
<td><code>[my_markdown_file.md](class:file) file</code>            </td>
<td> <span class="file">my_markdown_file.md</span> file</td>
</tr>
</tbody>
</table>
</div>

<div class="tip"><p>Tip</p>

<p>The <span class="kwd">kwd</span>, <span class="kwd">opt</span>, <span class="kwd">file</span>, <span class="kwd">dir</span>, <span class="kwd">arg</span>, <span class="kwd">tt</span> and <span class="kwd">cmd</span> classes are all rendered as inline monospace text. <span class="kwd">kwd</span> and <span class="ext">ext</span> are also rendered in bold.</p></div>

<a name="SmartyPants-Substitutions"></a>
<h4>SmartyPants Substitutions<a href="#document-top" title="Go to top"></a></h4>

<p>Special characters can be easily entered using some special character sequences.</p>

<p>HastyScribe  supports all the sequences supported by <a href="http://www.pell.portland.or.us/~orc/Code/discount/">Discount</a>:</p>

<ul>
<li><code>`` text‘’</code> &rarr; “text”.</li>
<li><code>"double-quoted text"</code> &rarr; “double-quoted text”</li>
<li><code>'single-quoted text'</code> &rarr; ‘single-quoted text’</li>
<li><code>don't</code> &rarr; don’t. as well as anything-else’t. (But foo'tbar is just foo'tbar.)</li>
<li><code>it's</code> &rarr; it’s, as well as anything-else’s (except not foo'sbar and the like.)</li>
<li><code>(tm)</code> &rarr; ™</li>
<li><code>(r)</code> &rarr; ®</li>
<li><code>(c)</code> &rarr; ©</li>
<li><code>1/4th</code> &rarr; &frac14;th. Same goes for &frac12; and &frac34;.</li>
<li><code>...</code> or <code>. . .</code> &rarr; …</li>
<li><code>---</code> &rarr; —</li>
<li><code>--</code> &rarr; –</li>
<li><code>A^B</code> becomes A<sup>B</sup>. Complex superscripts can be enclosed in brackets, so <code>A^(B+2)</code> &rarr; A<sup>B+2</sup>.</li>
</ul>


<a name="Icons"></a>
<h4>Icons<a href="#document-top" title="Go to top"></a></h4>

<p>HastyScribe  bundles the <a href="http://fortawesome.github.io/Font-Awesome/">FontAwesome</a> icon font. To prepend an icon to text you can use Discount&rsquo;s <em>class:</em> pseudo-protocol, and specify a valid <span class="kwd">fa-*</span> (non-alias) class.</p>

<p>Examples:</p>

<div class="responsive"><table>
<thead>
<tr>
<th>Source                                   </th>
<th> Output</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[a paper plane](class:fa-paper-plane)</code> </td>
<td> <span class="fa-paper-plane"> a paper plane</span></td>
</tr>
<tr>
<td><code>[Galactic Empire](class:fa-empire)</code>    </td>
<td> <span class="fa-empire"> Galactic Empire</span></td>
</tr>
<tr>
<td><code>[Rebel Alliance](class:fa-rebel)</code>      </td>
<td> <span class="fa-rebel"> Rebel Alliance</span></td>
</tr>
</tbody>
</table>
</div>

<div class="tip"><p>Tip</p>

<p>See the <a href="http://fortawesome.github.io/Font-Awesome/icons/">FontAwesome Icon Reference</a> for a complete list of all CSS classes to use for icons (aliases are not supported).</p></div>

<a name="Badges"></a>
<h4>Badges<a href="#document-top" title="Go to top"></a></h4>

<p>Badges are shorthands for <a href="#Icons">Icons</a> formatted with different colors. To add a <em>badge</em> to some inline text, use the corresponding class among those listed in the following table. For example, the following code:</p>

<pre><code>[Genoa, Italy](class:badge-geo)
</code></pre>

<p>produces the following result:</p>

<p><span class="badge-geo">Genoa, Italy</span></p>

<p>HastyScribe  currently supports the following badges:</p>

<div class="responsive"><table>
<thead>
<tr>
<th>Class                      </th>
<th> Badge                              </th>
<th> Class                     </th>
<th> Badge</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>badge-todo</code>               </td>
<td> <span class="badge-todo"></span>               </td>
<td><code>badge-user</code>               </td>
<td> <span class="badge-user"></span></td>
</tr>
<tr>
<td><code>badge-fixme</code>              </td>
<td> <span class="badge-fixme"></span>              </td>
<td><code>badge-tag</code>                </td>
<td> <span class="badge-tag"></span></td>
</tr>
<tr>
<td><code>badge-deadline</code>           </td>
<td> <span class="badge-deadline"></span>           </td>
<td><code>badge-tags</code>               </td>
<td> <span class="badge-tags"></span></td>
</tr>
<tr>
<td><code>badge-comment</code>            </td>
<td> <span class="badge-comment"></span>            </td>
<td><code>badge-attachment</code>         </td>
<td> <span class="badge-attachment"></span></td>
</tr>
<tr>
<td><code>badge-urgent</code>             </td>
<td> <span class="badge-urgent"></span>             </td>
<td><code>badge-bug</code>                </td>
<td> <span class="badge-bug"></span></td>
</tr>
<tr>
<td><code>badge-verify</code>             </td>
<td> <span class="badge-verify"></span>             </td>
<td><code>badge-geo</code>                </td>
<td> <span class="badge-geo"></span></td>
</tr>
<tr>
<td><code>badge-project</code>            </td>
<td> <span class="badge-project"></span>            </td>
<td><code>badge-square</code>             </td>
<td> <span class="badge-square"></span></td>
</tr>
<tr>
<td><code>badge-star</code>               </td>
<td> <span class="badge-star"></span>               </td>
<td><code>badge-check</code>              </td>
<td> <span class="badge-check"></span></td>
</tr>
<tr>
<td><code>badge-heart</code>              </td>
<td> <span class="badge-heart"></span>              </td>
<td><code>badge-rss</code>                </td>
<td> <span class="badge-rss"></span></td>
</tr>
<tr>
<td><code>badge-lock</code>               </td>
<td> <span class="badge-lock"></span>               </td>
<td><code>badge-danger</code>             </td>
<td> <span class="badge-danger"></span></td>
</tr>
<tr>
<td><code>badge-unlock</code>             </td>
<td> <span class="badge-unlock"></span>             </td>
<td><code>badge-question</code>           </td>
<td> <span class="badge-question"></span></td>
</tr>
<tr>
<td><code>badge-folder</code>             </td>
<td> <span class="badge-folder"></span>             </td>
<td><code>badge-flag</code>               </td>
<td> <span class="badge-flag"></span></td>
</tr>
<tr>
<td><code>badge-story</code>              </td>
<td> <span class="badge-story"></span>              </td>
<td><code>badge-feature</code>            </td>
<td> <span class="badge-feature"></span></td>
</tr>
<tr>
<td><code>badge-add</code>                </td>
<td> <span class="badge-add"></span>                </td>
<td><code>badge-remove</code>             </td>
<td> <span class="badge-remove"></span></td>
</tr>
<tr>
<td><code>badge-time</code>               </td>
<td> <span class="badge-time"></span>               </td>
<td><code>badge-date</code>               </td>
<td> <span class="badge-date"></span></td>
</tr>
<tr>
<td><code>badge-html5</code>              </td>
<td> <span class="badge-html5"></span>              </td>
<td><code>badge-css3</code>               </td>
<td> <span class="badge-css3"></span></td>
</tr>
<tr>
<td><code>badge-apple</code>              </td>
<td> <span class="badge-apple"></span>              </td>
<td><code>badge-windows</code>            </td>
<td> <span class="badge-windows"></span></td>
</tr>
<tr>
<td><code>badge-linux</code>              </td>
<td> <span class="badge-linux"></span>              </td>
<td><code>badge-android</code>            </td>
<td> <span class="badge-android"></span></td>
</tr>
<tr>
<td><code>badge-freebsd</code>            </td>
<td> <span class="badge-freebsd"></span>            </td>
<td><code>badge-aws</code>                </td>
<td> <span class="badge-aws"></span></td>
</tr>
<tr>
<td><code>badge-idea</code>               </td>
<td> <span class="badge-idea"></span>               </td>
<td><code>badge-link</code>               </td>
<td> <span class="badge-link"></span></td>
</tr>
<tr>
<td><code>badge-chrome</code>             </td>
<td> <span class="badge-chrome"></span>             </td>
<td><code>badge-firefox</code>            </td>
<td> <span class="badge-firefox"></span></td>
</tr>
<tr>
<td><code>badge-ie</code>                 </td>
<td> <span class="badge-ie"></span>                 </td>
<td><code>badge-edge</code>               </td>
<td> <span class="badge-edge"></span></td>
</tr>
<tr>
<td><code>badge-safari</code>             </td>
<td> <span class="badge-safari"></span>             </td>
<td><code>badge-opera</code>              </td>
<td> <span class="badge-opera"></span></td>
</tr>
<tr>
<td><code>badge-php</code>                </td>
<td> <span class="badge-php"></span>                </td>
<td><code>badge-erlang</code>             </td>
<td> <span class="badge-erlang"></span></td>
</tr>
<tr>
<td><code>badge-python</code>             </td>
<td> <span class="badge-python"></span>             </td>
<td><code>badge-java</code>               </td>
<td> <span class="badge-java"></span></td>
</tr>
<tr>
<td><code>badge-nodejs</code>             </td>
<td> <span class="badge-nodejs"></span>             </td>
<td><code>badge-js</code>                 </td>
<td> <span class="badge-js"></span></td>
</tr>
<tr>
<td><code>badge-toggle-on</code>          </td>
<td> <span class="badge-toggle-on"></span>          </td>
<td><code>badge-toggle-off</code>         </td>
<td> <span class="badge-toggle-off"></span></td>
</tr>
<tr>
<td><code>badge-debian</code>             </td>
<td> <span class="badge-debian"></span>             </td>
<td><code>badge-fedora</code>             </td>
<td> <span class="badge-fedora"></span></td>
</tr>
<tr>
<td><code>badge-centos</code>             </td>
<td> <span class="badge-centos"></span>             </td>
<td><code>badge-suse</code>               </td>
<td> <span class="badge-suse"></span></td>
</tr>
<tr>
<td><code>badge-redhat</code>             </td>
<td> <span class="badge-redhat"></span>             </td>
<td><code>badge-ubuntu</code>             </td>
<td> <span class="badge-ubuntu"></span></td>
</tr>
<tr>
<td><code>badge-rust</code>               </td>
<td> <span class="badge-rust"></span>               </td>
<td><code>badge-go</code>                 </td>
<td> <span class="badge-go"></span></td>
</tr>
<tr>
<td><code>badge-rpi</code>                </td>
<td> <span class="badge-rpi"></span>                </td>
<td><code>badge-markdown</code>           </td>
<td> <span class="badge-markdown"></span></td>
</tr>
<tr>
<td><code>badge-react</code>              </td>
<td> <span class="badge-react"></span>              </td>
<td><code>badge-angular</code>            </td>
<td> <span class="badge-angular"></span></td>
</tr>
<tr>
<td><code>badge-vue</code>                </td>
<td> <span class="badge-vue"></span>                </td>
<td><code>badge-code</code>               </td>
<td> <span class="badge-code"></span></td>
</tr>
<tr>
<td><code>badge-address</code>            </td>
<td> <span class="badge-address"></span>            </td>
<td><code>badge-org</code>                </td>
<td> <span class="badge-org"></span></td>
</tr>
<tr>
<td><code>badge-toxic</code>              </td>
<td> <span class="badge-toxic"></span>              </td>
<td><code>badge-network</code>            </td>
<td> <span class="badge-network"></span></td>
</tr>
<tr>
<td><code>badge-upload</code>             </td>
<td> <span class="badge-upload"></span>             </td>
<td><code>badge-download</code>           </td>
<td> <span class="badge-download"></span></td>
</tr>
</tbody>
</table>
</div>

<a name="Anchors"></a>
<h4>Anchors<a href="#document-top" title="Go to top"></a></h4>

<p>You can define HTML anchors inline by wrapping their ID in hashes. For example, the following code:</p>

<pre><code> Some text goes here. #some_text#
</code></pre>

<p>Is converted to:</p>

<pre><code> Some text goes here. &lt;a id="some_text"&gt;&lt;/a&gt;
</code></pre>

<div class="note"><p>Note</p>

<ul>
<li>Anchor markup must be preceded by at least one space.</li>
<li>IDs must start with a letter, and can contain letters, numbers, and any of the following characters: <code>_</code> <code>-</code> <code>.</code> <code>:</code></li>
</ul>
</div>

<a name="Links"></a>
<h4>Links<a href="#document-top" title="Go to top"></a></h4>

<div class="responsive"><table>
<thead>
<tr>
<th>Source                                  </th>
<th> Output</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[H3RALD](https://h3rald.com/)</code>         </td>
<td> <a href="https://h3rald.com/">H3RALD</a></td>
</tr>
<tr>
<td><code>[H3RALD](https://h3rald.com/ "H3RALD")</code></td>
<td> <a href="https://h3rald.com/" title="H3RALD">H3RALD</a></td>
</tr>
<tr>
<td><code>&lt;https://h3rald.com&gt;</code>                  </td>
<td> <a href="https://h3rald.com">https://h3rald.com</a></td>
</tr>
</tbody>
</table>
</div>

<p>Additionally, you can define placeholders for URLs and link titles, like this:</p>

<p><code>[h3rald]: https://h3rald.com/ "Fabio Cevasco's Web Site"</code></p>

<p>And use them in hyperlinks (note the usage of square brackets instead of round brackets):</p>

<p><code>[H3RALD][h3rald]</code></p>

<div class="sidebar"><p>Link Icons</p>

<p>HastyScribe  automatically adds an envelope icon to email links, an arrow icon to links to external web sites, and logo icons to links to well-known web sites:</p>

<ul>
<li><a href="mailto:h3rald@h3rald.com">h3rald@h3rad.com</a></li>
<li><a href="https://twitter.com/h3rald">@h3rald</a></li>
<li><a href="https://it.linkedin.com/in/fabiocevasco">fabiocevasco</a></li>
</ul>
</div>

<a name="Block-level-Formatting"></a>
<h3>Block-level Formatting<a href="#document-top" title="Go to top"></a></h3>

<a name="Headings"></a>
<h4>Headings<a href="#document-top" title="Go to top"></a></h4>

<p>Headings can be specified simply by prepending <span class="kwd">#</span>s to text, as follows:</p>

<pre><code># Heading 1
## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
</code></pre>

<div class="note"><p>Note</p>

<p>If you use <a href="#Document-Headers">Document Headers</a>, A <span class="kwd">H1</span> is used for the title of the HastyScribe  document. Within the document, start using headings from <span class="kwd">H2</span>.</p></div>

<a name="Tables"></a>
<h4>Tables<a href="#document-top" title="Go to top"></a></h4>

<p>HastyScribe  supports [PHP Markdown Extra][pme] table syntax using pipes and dashes.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>Column Header 1 | Column Header 2 | Column Header 3 
----------------|-----------------|----------------
Cell 1,1        | Cell 1,2        | Cell 1, 3
Cell 2,1        | Cell 2,2        | Cell 2, 3
Cell 3,1        | Cell 3,2        | Cell 3, 3
</code></pre>

<p>Produces the following output:</p>

<table>
<thead>
<tr>
<th>Column Header 1 </th>
<th> Column Header 2 </th>
<th> Column Header 3</th>
</tr>
</thead>
<tbody>
<tr>
<td>Cell 1,1        </td>
<td> Cell 1,2        </td>
<td> Cell 1, 3</td>
</tr>
<tr>
<td>Cell 2,1        </td>
<td> Cell 2,2        </td>
<td> Cell 2, 3</td>
</tr>
<tr>
<td>Cell 3,1        </td>
<td> Cell 3,2        </td>
<td> Cell 3, 3</td>
</tr>
</tbody>
</table>


<div class="note"><p>Note</p>

<p>Multi-row cells are not supported. If you need more complex tables, use HTML code instead.</p></div>

<div class="sidebar"><p>Responsive Tables</p>

<p>To make tables responsive, put them in a <em>responsive</em> block, like in the previous example. The <span class="kwd">responsive</span> class causes a table not to shrink and makes it scrollable horizontally on small devices.</p></div>

<a name="Block-Quotes"></a>
<h4>Block Quotes<a href="#document-top" title="Go to top"></a></h4>

<p>Block quotes can be created simply by prepending a <span class="kwd">></span> to a line, and they can be nested by prepending additional <span class="kwd">></span>s.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; This is a block quote.
&gt; &gt; This is a nested quote. 
</code></pre>

<p>Produces the following output:</p>

<blockquote><p>This is a block quote.</p>

<blockquote><p>This is a nested quote.</p></blockquote></blockquote>

<a name="Code-Blocks"></a>
<h4>Code Blocks<a href="#document-top" title="Go to top"></a></h4>

<p>To format a block of source code, indent it by at least four spaces. Here&rsquo;s the result:</p>

<pre><code>proc encode_image_file*(file, format): string =
  if (file.existsFile):
    let contents = file.readFile
    return encode_image(contents, format)
  else: 
    echo("Warning: image '"&amp; file &amp;"' not found.")
    return file
</code></pre>

<p>Alternatively, you can also use Github-style fenced blocks, by adding three tildes (~~~) or backticks (```) before and after the source code.</p>

<div class="warning"><p>Warning</p>

<p>HastyScribe  does not support syntax highlighting for code blocks. To do so, it would require Javascript and HastyScribe  is currently kept purposedly &ldquo;Javascript-free&rdquo;.</p></div>

<a name="Images"></a>
<h4>Images<a href="#document-top" title="Go to top"></a></h4>

<p>The following HastyScribe Markdown code:</p>

<pre><code>![HastyScribe Logo](./images/hastyscribe.png =221x65)
</code></pre>

<p>Produces the following output:</p>

<p><img src="./images/hastyscribe.png" height="65" width="221" alt="HastyScribe Logo" /></p>

<div class="tip"><p>Tip</p>

<p>You can use URL placeholders for images as well, exactly like for links.</p></div>

<div class="warning"><p>Limitations on automatic image download</p>

<p>HastyScribe  will attempt to download all HTTP image links. Note that:</p>

<ul>
<li>If no response is received within 5 seconds, the download will be aborted.</li>
<li>Connecting through a proxy is currently not supported.</li>
<li>To download an image via HTTPS, you must explicitly recompile HastyScribe  with <span class="kwd">-d:ssl</span> and OpenSSL must be installed on your system.</li>
</ul>


<p>If HastyScribe  is unable to download an image, it will leave it linked.</p></div>

<a name="Lists"></a>
<h4>Lists<a href="#document-top" title="Go to top"></a></h4>

<a name="Unordered-Lists"></a>
<h5>Unordered Lists<a href="#document-top" title="Go to top"></a></h5>

<p>The following HastyScribe Markdown code:</p>

<pre><code>* An item
* Another item
* And another...
</code></pre>

<p>Produces the following output:</p>

<ul>
<li>An item</li>
<li>Another item</li>
<li>And another&hellip;</li>
</ul>


<a name="Ordered-Lists"></a>
<h5>Ordered Lists<a href="#document-top" title="Go to top"></a></h5>

<p>The following HastyScribe Markdown code:</p>

<pre><code>1. First item
2. Second item
3. Third item
</code></pre>

<p>Produces the following output:</p>

<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
</ol>


<div class="tip"><p>Tip</p>

<p>You don&rsquo;t have to write numbers in order &ndash; any number followed by a dot will do.</p></div>

<a name="Alphabetical-Lists"></a>
<h5>Alphabetical Lists<a href="#document-top" title="Go to top"></a></h5>

<p>The following HastyScribe Markdown code:</p>

<pre><code>a. First item
b. Second item
c. Third item
</code></pre>

<p>Produces the following output:</p>

<ol type="a">
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
</ol>


<div class="tip"><p>Tip</p>

<p>You don&rsquo;t have to write letters in order &ndash; any letter followed by a dot will do.</p></div>

<a name="Checklists"></a>
<h5>Checklists<a href="#document-top" title="Go to top"></a></h5>

<p>The following HastyScribe Markdown code:</p>

<pre><code>- [ ] Do something
- [ ] Do something else
- [x] Done!
</code></pre>

<p>Produces the following output:</p>

<ul>
<li class="github_checkbox"><input disabled="" type="checkbox"/> Do something</li>
<li class="github_checkbox"><input disabled="" type="checkbox"/> Do something else</li>
<li class="github_checkbox"><input disabled="" type="checkbox" checked="checked"/> Done!</li>
</ul>


<a name="Unstyled-Lists"></a>
<h5>Unstyled Lists<a href="#document-top" title="Go to top"></a></h5>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %unstyled%
&gt; * An item
&gt; * Another item
&gt; * And another...
</code></pre>

<p>Produces the following output:</p>

<div class="unstyled"><ul>
<li>An item</li>
<li>Another item</li>
<li>And another&hellip;</li>
</ul>
</div>

<a name="Nested-Lists"></a>
<h5>Nested Lists<a href="#document-top" title="Go to top"></a></h5>

<p>To create a list within a list, simply indent the whole nested list with four space.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>* This is a normal list
* Another item
    * A nested unordered list
    * Another item
* Back in the main list
    a. A nested alphabetical list
    b. Another item
</code></pre>

<p>Produces the following output:</p>

<ul>
<li>This is a normal list</li>
<li>Another item

<ul>
<li>A nested unordered list</li>
<li>Another item</li>
</ul>
</li>
<li>Back in the main list

<ol type="a">
<li> A nested alphabetical list</li>
<li> Another item</li>
</ol>
</li>
</ul>


<a name="Definition-Lists"></a>
<h5>Definition Lists<a href="#document-top" title="Go to top"></a></h5>

<p>In some cases you may want to write a list of terms and their corresponding definitions. You could use an ordinary unordered list, but semantically speaking the <em>proper</em> type of list to use in this case is a definition list.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>unordered list
: A list for unordered items. Also called _bulleted list_.
ordered list 
: A list for ordered items. Also called _numbered list_.
alphabetical list
: Technically speaking just an ordered list, but formatted with letters instead 
  of numbers
definition list
: A list of terms and definitions.
</code></pre>

<p>Produces the following output:</p>

<dl>
<dt>unordered list</dt>
<dd>A list for unordered items. Also called <em>bulleted list</em>.</dd>
<dt>ordered list </dt>
<dd>A list for ordered items. Also called <em>numbered list</em>.</dd>
<dt>alphabetical list</dt>
<dd>Technically speaking just an ordered list, but formatted with letters instead
of numbers</dd>
<dt>definition list</dt>
<dd>A list of terms and definitions.</dd>
</dl>

<p>Alternatively, you can write the above definition list as follows:</p>

<pre><code>=unordered list=
  A list for unordered items. Also called _bulleted list_.
=ordered list=
  A list for ordered items. Also called _numbered list_.
=alphabetical list=
  Technically speaking just an ordered list, but formatted with letters instead
  of numbers
=definition list=
  A list of terms and definitions.
</code></pre>

<a name="Class-Blocks"></a>
<h4>Class Blocks<a href="#document-top" title="Go to top"></a></h4>

<a name="Notes"></a>
<h5>Notes<a href="#document-top" title="Go to top"></a></h5>

<p><a href="http://www.pell.portland.or.us/~orc/Code/discount/">Discount</a> supports the definition of <em>class blocks</em>: <span class="kwd">div</span>s with a class attribute. The syntax is very similar to the one used for <a href="#Block-Quotes">block quotes</a>, with the addition of the class name wrapped in <span class="kwd">%</span>s on the first line.</p>

<p>In HastyScribe , this syntax is used to produce notes, <a href="#Tips">tips</a>, <a href="#Warnings">warmings</a>, <a href="#Sidebars">sidebars</a> and <a href="#Terminal-Sessions">terminal sessions</a>.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %note%
&gt; Note
&gt; 
&gt; This is a note.
</code></pre>

<p>Produces the following output:</p>

<div class="note"><p>Note</p>

<p>This is a note.</p></div>

<a name="Tips"></a>
<h5>Tips<a href="#document-top" title="Go to top"></a></h5>

<p>Tips are used for optional information that can help the user in some way.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %tip%
&gt; Tip
&gt; 
&gt; This is a tip.
</code></pre>

<p>Produces the following output:</p>

<div class="tip"><p>Tip</p>

<p>This is a tip.</p></div>

<a name="Warnings"></a>
<h5>Warnings<a href="#document-top" title="Go to top"></a></h5>

<p>Warnings are used for important information the user should not overlook.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %warning%
&gt; Warning
&gt; 
&gt; This is a warning or an important note.
</code></pre>

<p>Produces the following output:</p>

<div class="warning"><p>Warning</p>

<p>This is a warning or an important note.</p></div>

<a name="Sidebars"></a>
<h5>Sidebars<a href="#document-top" title="Go to top"></a></h5>

<p>Sidebars are used for digressions and asides.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %sidebar%
&gt; This is a _sidebar_
&gt; 
&gt; Although not always placed on the side of the page, _sidebars_ contain 
&gt; additional content and asides.
</code></pre>

<p>Produces the following output:</p>

<div class="sidebar"><p>This is a <em>sidebar</em></p>

<p>Although not always placed on the side of the page, <em>sidebars</em> contain additional content and asides.</p></div>

<a name="Blank-Sidebars"></a>
<h5>Blank Sidebars<a href="#document-top" title="Go to top"></a></h5>

<p>Blank sidebars can be customized to include custom icons. They are suitable for conditional (operating system or browser specific) instructions.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %blank-sidebar%
&gt; [](class:chrome)[](class:firefox)[](class:edge) Browser Support
&gt; 
&gt; This web app supports only modern browsers, i.e. the latest versions of Google Chrome, Mozilla Firefox and Microsoft Edge, but _not_ Microsoft Internet Explorer.
</code></pre>

<p>Produces the following output:</p>

<div class="blank-sidebar"><p><span class="chrome"></span><span class="firefox"></span><span class="edge"></span> Browser Support</p>

<p>This web app supports only modern browsers, i.e. the latest versions of Google Chrome, Mozilla Firefox and Microsoft Edge, but <em>not</em> Microsoft Internet Explorer.</p></div>

<a name="Terminal-Sessions"></a>
<h5>Terminal Sessions<a href="#document-top" title="Go to top"></a></h5>

<p>Terminal sessions are used to display commands entered in a terminal, in sequence, without displaying their output.</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %terminal%
&gt; 
&gt; cd src
&gt; 
&gt; ./configure
&gt; 
&gt; make &amp;&amp; sudo make install
</code></pre>

<p>Produces the following output:</p>

<div class="terminal"><p>cd src</p>

<p>./configure</p>

<p>make &amp;&amp; sudo make install</p></div>

<p>If commands must be executed as a super-user, use the <span class="kwd">terminal-su</span> class instead:</p>

<p>The following HastyScribe Markdown code:</p>

<pre><code>&gt; %terminal-su%
&gt; 
&gt; shutdown -h now
</code></pre>

<p>Produces the following output:</p>

<div class="terminal-su"><p>shutdown -h now</p></div>
    </div>
    <div id="footer">
      <p><span class="copy"></span> Fabio Cevasco &ndash; August 30, 2023</p>
      <p><span>Powered by</span> <a href="https://h3rald.com/hastyscribe"><span class="hastyscribe"></span></a></p>
    </div>
  </div>
  
</body>